-- ================================================
-- üíØ HTTP SPY (100% —Ä–∞–±–æ—á–∏–π, —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã)
-- ================================================

-- 1. –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª (—á–µ—Ä–µ–∑ writefile/appendfile)
local LOG_FILE = "http_spy_logs.txt"

local function SafeWrite(content)
    if writefile and readfile then
        if not pcall(readfile, LOG_FILE) then
            writefile(LOG_FILE, "=== HTTP LOG START ===\n\n")
        end
        appendfile(LOG_FILE, content.."\n")
    end
end

-- 2. –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç URL (–±–µ–∑ –æ–±—Ä–µ–∑–∞–Ω–∏—è)
local function LogFullRequest(req_type, url, data)
    local timestamp = os.date("[%H:%M:%S]")
    local entry = string.format("%s [%s] %s", timestamp, req_type, url)
    
    if data then
        entry = entry .. "\n" .. string.format("DATA: %s", tostring(data))
    end
    
    SafeWrite(entry)
end

-- 3. –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π
-- Loadstring
local original_loadstring = loadstring
loadstring = function(code, ...)
    for full_url in code:gmatch("(https?://[%S]+)") do
        LogFullRequest("LOADSTRING", full_url)
    end
    return original_loadstring(code, ...)
end

-- HttpGet
local original_httpget = game.HttpGet
game.HttpGet = function(self, url, ...)
    LogFullRequest("HTTP-GET", url)
    return original_httpget(self, url, ...)
end

-- HttpPost
local original_httppost = game.HttpPost
game.HttpPost = function(self, url, data, ...)
    LogFullRequest("HTTP-POST", url, data)
    return original_httppost(self, url, data, ...)
end

-- HttpService
local http_service = game:GetService("HttpService")
local original_getasync = http_service.GetAsync
http_service.GetAsync = function(self, url, ...)
    LogFullRequest("HTTPSERVICE-GET", url)
    return original_getasync(self, url, ...)
end

local original_postasync = http_service.PostAsync
http_service.PostAsync = function(self, url, data, ...)
    LogFullRequest("HTTPSERVICE-POST", url, data)
    return original_postasync(self, url, data, ...)
end

-- 4. –î–ª—è Synapse/Krnl
if syn and syn.request then
    local original_synrequest = syn.request
    syn.request = function(args)
        LogFullRequest("SYN-"..(args.Method or "GET"), args.Url, args.Body)
        return original_synrequest(args)
    end
end

-- 5. –û—Ç–∫–ª—é—á–∞–µ–º –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
if rconsoleprint then rconsoleprint = function() end end
print = function() end
warn = function() end